rexx_ddbycblk:   /*   REXX */
  ddbycblk_version = "01.00"
  arg match_dd .
  Numeric Digits 12
  sp8 = Copies(" ",8)
  ds8 = Copies("-",8)
  erc = 0
  /*
  parse value SYSVAR("SYSCPU") SYSVAR("SYSSRV") with b_cpu b_srv
  */
  grc = get_alc()    /* Run through control blocks */
  grc = dsp_alc()
  /*
  parse value SYSVAR("SYSCPU") SYSVAR("SYSSRV") with e_cpu e_srv
  SAY "AFTER  SELECT" right(sp8||e_cpu,8) right(sp8||e_srv,8)
  SAY "BEFORE SELECT" right(sp8||b_cpu,8) right(sp8||b_srv,8)
  SAY "             " right(ds8,8) right(ds8,8)
  SAY "BEFORE SELECT" right(sp8||(e_cpu-b_cpu),8),
    right(sp8||(e_srv-b_srv),8)
  */
  return erc

dsp_alc:
  select
    when ((match_dd >< "") & (match_dd >< "*")) then,
      do
        dd# = dd_nnbr.match_dd
        dn= dd_name.dd#
        say "DDNAME(" dn ")"
        nd =    dsname.dd#.0
        do ds# = 1 to nd
          say copies(" ",8) dsname.dd#.ds#
        end
        erc = nd
      end
    when (match_dd = "*") then,
      do
        say "All ddnames allocated"
        do dd# = 1 to dd_names
          dn= dd_name.dd#
          say "DDNAME(" dn ")"
          nd =    dsname.dd#.0
          do ds# = 1 to nd
            if ((dn = match_DD) | (match_dd = "*")) then,
              say copies(" ",8) dsname.dd#.ds#
          end
        end
        erc = dd_names
      end
    otherwise
      erc = dd_names
      do dd# = 1 to dd_names
        dn= dd_name.dd#
        nd =    dsname.dd#.0
        erc = erc";"dd#";"dn";"nd
        do ds# = 1 to nd
          erc = erc";"ds#";"dsname.dd#.ds#
        end
      end
  end
  return erc

get_alc:
  PSATOLD  = STORAGE(21C,4)                      /* POINTER TO TCB  */
  PTRTIOT  = STORAGE(D2X(C2D(PSATOLD)+12),4)     /* POINTER TO TIOT */
  tiotptr  = D2C(C2D(PTRTIOT)+24)                /* TIOT pointer    */
  tiotelen = c2d(STORAGE(D2X(C2D(tiotptr)+0),1))
  dd_names = 0
  do while tiotelen > 0
    tiotflag = c2d(STORAGE(D2X(C2D(tiotptr)+1),1))
    tiotddnm = STORAGE(D2X(C2D(tiotptr)+4),8)
    IF BITAND(tiotflag,'80'X) = '80'X THEN,      /* active ddname  */
      do
        if tiotddnm = copies("00"x,8) then,
          do
            Leave
          end
        if tiotddnm >< "        " then,
          do
            dd_name = strip(tiotddnm,"B"," ")
            dd_names = dd_names + 1
            dd_name.dd_names = dd_name
            dd_nnbr.tiotddnm = dd_names
            dsname.dd_names.0 = 0
          end
          tioejfcb = storage(d2x(c2d(tiotptr)+12),3)
          jfcb = swareq(tioejfcb)
          TIOESTTC = storage(d2x(c2d(tiotptr)+15),1)
          TIOESTTB = storage(d2x(c2d(tiotptr)+16),1)
          TIOEFSRT = storage(d2x(c2d(tiotptr)+17),3) /* ucb addr */
          JFCBDSN   = strip(storage(d2x(jfcb+000),44),"B"," ")
/*        say jfcbdsn c2x(storage(c2x(tioefsrt),16))             */
          JFCBELNM  = strip(storage(d2x(jfcb+044),8),"B"," ")
          if jfcbelnm >< "" then,
            fullname = jfcbdsn"("jfcbelnm")"
          else,
            fullname = jfcbdsn
          ds_temp = dsname.dd_names.0 + 1
          dsname.dd_names.0 = ds_temp
          dsname.dd_names.ds_temp = fullname
      end
    tiotptr = D2C(C2D(tiotptr)+tiotelen)
    tiotelen = c2d(STORAGE(D2X(C2D(tiotptr)+0),1))
  end
  return dd_names

/*-------------------------------------------------------------------*/
swareq:   Procedure
  If right(c2x(Arg(1)),1) >< 'F' Then  /* Swa=Below ?                */
    Return c2d(Arg(1))+16              /* Yes, return sva+16         */
  sva = c2d(Arg(1))                    /* Convert to decimal         */
  tcb = ptr(540)                       /* Tcb psatold                */
  jscb = ptr(tcb+180)                  /* Jscb tcbjscb               */
  qmpl = ptr(jscb+244)                 /* Qmpl jscbqmpi              */
  qmat = ptr(qmpl+24)                  /* Qmat qmadd                 */
  Do While sva>65536
    qmat = ptr(qmat+12)                /* Next qmat qmat+12          */
    sva=sva-65536                      /* 010006F -> 000006F         */
  End
  Return ptr(qmat+sva+1)+16

/*-------------------------------------------------------------------*/
ptr:
  Return c2d(storage(d2x(Arg(1)),4))     /* Return a pointer         */
