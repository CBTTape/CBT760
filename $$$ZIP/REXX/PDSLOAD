rexx_HEX2OBJ:  /* We still need rexx in comment if read from SYSPROC */         
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
                                                                                
  Dataset:  KET2812.REXX(HEX2OBJ)                                               
  Author:   KTomiak                                                             
  Contact:  "Kenneth Tomiak"<cbt_ken@KTomiak.biz>                               
  Syntax:   HEX2OBJ (output_ddname)                                             
  Overview: Reconstructs a member that was saved in hexadecimal                 
            format.                                                             
                                                                                
=======================================================================         
                                                                                
 History of Modifications                                                       
 ------------------------                                                       
  When     Who      What you did                                                
  -------- -------- ---------------------------------------------------         
  20070528 KTOMIAK  Original code.                                              
                                                                                
=======================================================================         
                                                                                
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
                                                                                
  Parse Arg all_my_arguments                                                    
  Numeric Digits 12                                                             
                                                                                
rexx_Main_HEX2OBJ:                                                              
  return_code = rexx_Initialize()                                               
  If (return_code = 0) then,                                                    
    Do                                                                          
      return_code = rexx_Process()                                              
      return_code = rexx_Termination()                                          
    End                                                                         
  Return 0                                                                      
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 In this routine we open any files and initialize any                           
 constants we might need.                                                       
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
rexx_Initialize:                                                                
  PARSE VERSION,                                                                
    rexx_version,                                                               
    rexx_date                                                                   
  PARSE SOURCE,                                                                 
    source_host_env,                                                            
    source_call_type,                                                           
    source_uc_exec_name,                                                        
    source_hostdd,                                                              
    source_hostdsn,                                                             
    source_nf_exec_name,                                                        
    source_initial_cmd_env,                                                     
    source_asid_name,                                                           
    source_char8_user_token,                                                    
    source_hostother                                                            
  job_specs = rexx_jobspecs()                                                   
  sysvar_sysuid = SYSVAR("SYSUID")                                              
  sysvar_sysenv = SYSVAR("SYSENV")                                              
  say ""                                                                        
  say Copies("=",55)                                                            
  say left("=" job_specs,53) "="                                                
  say left("=" source_uc_exec_name,                                             
    "executing under" source_host_env,                                          
    "as a" source_call_type,53) "="                                             
  say left("=  on" date() "at" time()".",53) "="                                
  say Copies("=",55)                                                            
  say ""                                                                        
  return_code = 0                                                               
                                                                                
  If (source_host_env >< "TSO") Then,                                       
    Do                                                                          
      Say "Wrong host environment" source_host_env                              
      return_code = 16                                                          
    End                                                                         
                                                                                
  Parse var all_my_arguments dd_ot .                                            
  if (datatype(dd_ot) = "NUM") then,                                            
    do                                                                          
      say "Setting default output DDname."                                      
      dd_ot = "OBJOT"                                                           
    end                                                                         
  if (dd_ot = "") then,                                                         
    do                                                                          
      say "Setting default output DDname."                                      
      dd_ot = "OBJOT"                                                           
    end                                                                         
                                                                                
  text_out.0 = 0                                                                
                                                                                
  text_in.0 = 0                                                                 
  call add_rexx_code                                                            
  say "Read" text_in.0 "records."                                               
                                                                                
  Return return_code                                                            
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 In this routine we do our processing.                                          
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
rexx_Process:                                                                   
  if (text_in.0 = 0) then,                                                      
    do                                                                          
      say source_uc_exec_name "is missing the data."                            
      return_code = 4                                                           
      return 4                                                                  
    end                                                                         
  do text_ix = 1 to text_in.0 by 2                                              
    line_1 = ""                                                                 
    text_1 = text_in.text_ix                                                    
    next_ix = text_ix + 1                                                       
    text_2 = text_in.next_ix                                                    
    do char_ix = 1 to length(text_1)                                            
      char_1 = substr(text_1,char_ix,1)                                         
      char_2 = substr(text_2,char_ix,1)                                         
      line_1 = line_1""char_1""char_2                                           
    end                                                                         
    text_out.0 = out_text(x2c(line_1))                                          
  end                                                                           
  Return return_code                                                            
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 In this routine we close files and finish up.                                  
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
rexx_Termination:                                                               
  "EXECIO * DISKW" dd_ot "(FINIS STEM TEXT_OUT.)"                               
  write_rc = RC                                                                 
  if (write_rc >< 0) then,                                                      
    Do                                                                          
      say "Encountered problems writing //DD:"dd_ot"."                          
      say "RC("write_rc") >< 0"                                                 
      return_code = write_rc                                                    
    end                                                                         
  say "Wrote" text_out.0 "records."                                             
  Return return_code                                                            
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================     
 Place any of your subroutines and procedures below this.                       
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
rexx_jobspecs:                                                                  
  /*---------------------------------------------------------------*/           
  /* ADDRESSABILITY TO CVT FROM PSA                                */           
  /*---------------------------------------------------------------*/           
  PTR2PSA = 0                                                                   
  CVTPTR = STORAGE(D2X(PTR2PSA + 16),4)                                         
  /*---------------------------------------------------------------*/           
  /* ADDRESSABILITY TO SMCA, THEN GET SMF SYSTEM ID                */           
  /*---------------------------------------------------------------*/           
  CVTSMCA = STORAGE(D2X(C2D(CVTPTR)+197),3)                                     
  SMFID = STORAGE(D2X(C2D(CVTSMCA)+16),4)                                       
  /*---------------------------------------------------------------*/           
  /* GET JOBNAME, STEP, AND PROCEDURE                              */           
  /*---------------------------------------------------------------*/           
  PSATOLD  = STORAGE(21C,4)                    /* POINTER TO TCB   */           
  PTRTIOT  = STORAGE(D2X(C2D(PSATOLD)+12),4)   /* POINTER TO TIOT  */           
  JOBNAME  = STORAGE(D2X(C2D(PTRTIOT)),8)                                       
  STEPNAME = STORAGE(D2X(C2D(PTRTIOT)+8),8)                                     
  PROCNAME = STORAGE(D2X(C2D(PTRTIOT)+16),8)                                    
  Tcbjscbb = Storage(D2x(C2d(Psatold)+181),3)              /* jscb */           
  jscbssib = STORAGE(D2X(C2D(tcbjscbb)+316),4)      /* Ptr to SSIB */           
  ssibjbid = STORAGE(D2X(C2D(jscbssib)+12),8)    /* job identifier */           
  Return JOBNAME SSIBJBID STEPNAME PROCNAME                                     
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 Adds text to a stem variable                                                   
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
in_text:                                                                        
  parse arg text_line                                                           
  text_next = text_in.0 + 1                                                     
  text_in.text_next = text_line                                                 
  return text_next                                                              
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 Adds text to a stem variable                                                   
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
out_text:                                                                       
  parse arg text_line                                                           
  text_next = text_out.0 + 1                                                    
  text_out.text_next = text_line                                                
  return text_next                                                              
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
 Adds the rexx code to convert the member back.                                 
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
add_rexx_code:                                                                  
  sigl_record = sigl + 25                                                       
  rexx_code = "YES"                                                             
  process_data = "NO"                                                           
  DO WHILE rexx_code = "YES"                                                    
    SIGL_RECORD=SIGL_RECORD+1                                                   
    MY_DATA=SOURCELINE(SIGL_RECORD)                                             
    IF (MY_DATA="ENDDATA*/") THEN,                                              
      DO                                                                        
        rexx_code="NO"                                                          
        LEAVE                                                                   
      END                                                                       
    IF (MY_DATA="/*BEGINDATA") THEN,                                            
      DO                                                                        
        PROCESS_DATA="YES"                                                      
        ITERATE                                                             
      END                                                                       
    IF (PROCESS_DATA="YES") THEN,                                               
      DO                                                                        
        text_in.0 = in_text(my_data)                                            
      END                                                                       
  END                                                                           
  return                                                                        
                                                                                
/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
=======================================================================         
__DATA__                                                                        
=======================================================================         
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */         
/*BEGINDATA                                                                     
0CEC444444014400DCEDDCC40000001A4444444444444444444444444444444444444444DCEDDCCF
25240000000000017423614000000090000000000000000000000000000000000000000074236141
0EEE4000440344004FF51DCEDDCC4FFFFFFFF44CDE4DDCCD4DEE744F7C6E66C44EDEDC6CDCEDDCCF
2373000000080001700417423614020070529001580395330643A001A6B50E60D39453B574236142
0EEE400344034400EECDC544F7E66E44EDEDC54400059ED01A4F0F4BA01250A541A6005FDCEDDCCF
237300080008000173554D002A50E50D39453D0010580C0C8F10FF1F01818000500CAA8074236143
0EEE400744034400A51E150E5D1051D01DF2DCBFF1DCBFF1DCBA94DC94D6D0D7B2D0D6BADCEDDCCF
23730000000800010081F5E4000400088180442280472281492C204B203A27482021082E74236144
0EEE400A44034400512040101048AE411040BB44A1D010BF47AF92D6411040BB48AE9610DCEDDCCF
23730008000800018000800020701210029020701E520023700060391003B02070125B0074236145
0EEE400E4403440047AA411040BB48AED010BF47A194D6411040BB48AE961047AA411040DCEDDCCF
237300000008000170181001B0227012520026701E60391003B02070125B0070181001B074236146
0EEE400144034400BB48AE40BB44AAD010BB47A8411040BB4FD74ED8951048A61F4BA5D0DCEDDCCF
23730018000800012270129020701851002470141002B026104810405D0070149E701C2074236147
0EEE400544034400F0104FF0411040A44FAE411040BB48AE961047AA411040BB48AA40BBDCEDDCCF
2373001000080001000010011001601070121001B02270125B0070181001B0227018902874236148
0EEE40084403440047AAD010BB47AA951047AAD0D6104FAE41AD0280DCEDDCC4ECDD4CCCDCEDDCCF
2373001800080001701855002A70185D0870182108067012501A0A00742361406933012574236149
0EEE400C44034400DC464CDECDCC4DCDCDCECD000202410600D5D6B7D5DCBDD5D2B343D6DCEDDCCF
237300100008000154000955139407191453590000A31004AD2F0C402F0C40271C50100C74236140
0EEE400F4403440044DC45D292D648A0D042B2982041AB512041101148A7901047A79010DCEDDCCF
2373001800080001100C101C1039702E2708281000702E8004100021702C5000702C170174236141
0EEE40034403440047A7921044AB901248A4D04212931044AB901248A6D03212941044ABDCEDDCCF
2373002000080001702C5801702E5002702A2708025001702E500A702027080A5801702E74236142
0EEE400644034400901448ABD052144FAB0041AB0380DCEDDCC464CDECDCC4CCDCDC4DECDCEDDCCF
23730028000800015002702E270802702E70502C0700742361400095513940445145065574236143
0EEE400A44014400DDCCC4DCDCDCECD4CCDDDCC000244444444444444444444444444444DCEDDCCF
23730020000B00019994507191453590975695400000000000000000000000000000000074236144
0EEE400B440344000246D59860119F1090104E0053004E0001913341A04F014FB6D013BCDCEDDCCF
2373002C00080001A3100020008640006F00310001002100A31000703210007006510E2074236145
0EEE400F4403440007D013159E120F98D6119F104E0054004E0001914341AB4F01D042B3DCEDDCCF
23730024000800017E210E024F047E6038864000310001002100A310007030100057082074236146
0EEE40024403440047B6D042B20041A60280DCEDDCC4ECDD4DCEDE4ECEC4CCDCDC7EEECDDCEDDCCF
2373003C0008000170062708287050380800742361406933095398069380445145E2829574236147
0EEE4006440344000002024FA09C120190DB94120190DB9812D013BC47A9D013159E120FDCEDDCCF
23730034000800010000A3703210047E241510047E20156004510E20703C210E024F047E74236148
0EEE400944034400D015BC07D015139E120F94D69C4241A8D8D6D6D4D6B2D0BC4542A911DCEDDCCF
2373003C000800015102207E21020E4F047E6038100470FA243B3A253C4751220270F68674236149
0EEE400D440344009F1090104E0055004E0001915341A34F014FB69C1244A148A0D01515DCEDDCCF
237300340008000140006F00310001002100A3100070401000700610047044704E71020274236140
0EEE4000440344000FD01242D015BC47A2D0154598120190DB0F92D69C5241A8945248A5DCEDDCCF
2373004C000800017E200404510220704421020210047E24177E6038100470FA1004704C74236141
0EEE400444034400984248A5D8D6D6D4D6B94FA9400040538000800050D841A70051D851DCEDDCCF
23730044000800011004704C243B3A2D3C3B70F61007A00E8003900400145044AA00180074236142
0EEE400744034400D9D010101040DB50D9415351D941108100810051DAD010101040DB50DCEDDCCF
2373004C000800011073000081A0160014A00E0018100780039003001073000081A0160074236143
0EEE400B44034400DA415351DA41DBD110B851D941DDD110B851DAD8D6D6D0D8B21151D5DCEDDCCF
237300440008000114A00E0018101C230058001C1010230058001C243B3A274020B1000874236144
0EEE400E4403440051D54EAA111FBF130E51DB400050D550D5D8D6D61F4FDBD0BAF047AFDCEDDCCF
2373004C00080001000C50F284FFF7015F00101001A0040004243B3A81A014512E00705C74236145
0EEE40024403440094DFD4DFDF4E041148A413B31043BC1342A41E4EAA4FDF430446D4D2DCEDDCCF
237300540008000120102E111010079F705AF3F300B0249E705A8340581010100710307774236146
0EEE4005440344006060114000D0606043AA48AC1E1E131F43AB48AB1E1E98605F604E60DCEDDCCF
2373005C000800010000B11004770000405E705A81BFBE814054705A81BF60060000000474236147
0EEE4009440344001348AC46601F40A64FACD0DFF0D0F0B9D0F0B94E3098605F604E6046DCEDDCCF
2373005400080001BE705A1008816056705A201000D0005CD0006C1001600600000004107423
0EEE400C44034400D4986048AF51604F6040001F42AF8F004FAE4FAF4FA44FAF94D848A6DCEDDCCF
2373005C00080001301006705C80008004100390705C90027F5C705C7076705C5040706074236149
0EEE400044034400410051D551D598D648AF41455EDB90DB48A2B1E041DB41BB4DA54EDBDCEDDCCF
23730064000800011001A008000810397044800280105015706CF300B01490227068A01474236140
0EEE400344034400D0E0D647A5D0E0BA410051D551D54EA84FAF90D641AF90D6D8D6D6D1DCEDDCCF
2373006C00080001510008706821002E1001A00C000C50607044143870446438243B3A2774236141
0EEE400744034400D6B34EAA4FAF5ED896D95EDB415590DB48AAB1E044AAB1E010171742DCEDDCCF
23730064000800013C2850F27044001C89108010800250177064D3007064F30087A1987074236142
0EEE400A44034400AF57D94F4590DB48AFBFE090DB47AD4EDB4FDB4FAF17476017B1704EDCEDDCCF
2373006C000800016E0014800250157062F30050177066A014B0147062B6000080E300A074236143
0EEE400E44034400BB4FBB40BB41BBBFD6005ED80F90D648A151DA5E101FBFE30E119210DCEDDCCF
237300640008000126B026A026B026F83AEE801C7E18387076801C8008BFF7055F89200574236144
0EEE400144034400550056001FBF530ED0D9DA96DA46DB56DA90D64FA84EAFD0D8B29FD6DCEDDCCF
2373007C000800010108010CBFF7015F2F10100910A01600146838706450CC2740204B3874236145
0EEE4005440344009FD69FD61151D551D597D6D8D6D6D4D6DF4EAAD010B648AA46D49860DCEDDCCF
23730074000800014D384E38B10008000C4F39243B3A273C1050F25B002070781038100674236146
0EEE40084403440048AFD060BB47A35160D010BF47AFD0D8B246D5986048AF4F604FBC4DDCEDDCCF
2373007C00080001705C51042070CE8000520029705C27402010301006705C8004B0247074236147
0EEE400C44034400A25160D010BF47A2411040001F42AFD0D8B20F4FAFD0D8104FAED0D8DCEDDCCF
23730074000800018A800054002C708A1005100890705C274020607074204000407ED74074236148
0EEE400F44034400BA47A99FD84BA996D848A994D748A24EAF47A298D64FAC46D5986048DCEDDCCF
2373007C000800017070BC504070BC504070BC5048708250BA708660397084103810067074236149
0EEE400344034400AF4F604FBC4DAF5160D010BF47AF411040001F42AFD0D8B20F4FA7D0DCEDDCCF
23730084000800015C8004B024705C800054002C705C1005100890705C2740206070802074236140
0EEE400644034400D8104FA6D0D8BA47A99FD84BA996D848A994D748A94EAF47AA98D646DCEDDCCF
2373008C000800014000408AD7407070BC504070BC504070BC5048708E50BA708260391074236141
0EEE400A44034400D54F6056604FBC47A9D060B648AE4FA946D5986048A94F6056604FBCDCEDDCCF
23730084000800013080048000902670B853002C708A70B81038100670B880048000902674236142
0EEE400D4403440047A0D060B647A0D0D86041D840004EAA90D64FAF90DB966047A190DBDCEDDCCF
2373008C00080001709453002C7094274C04104C100450B6613870442018500C7098211874236143
0EEE4001440344004FA64FBC44A94FBB42A9966047A9966047A9966147A9966147A99661DCEDDCCF
23730094000800017094B02870B8902870B8500470B8500A70B8500070B8500570B8500B74236144
0EEE40044403440047A9966247A9966247A94FAB4FBC44A94FBB42A9966047A9966047A9DCEDDCCF
2373009C0008000170B8500170B8500770B87090B02A70B8902870B8500470B8500C70B874236145
0EEE400844034400966147A9966147A9966147A9966247A9966247A94FAAD060BA47A9D0DCEDDCCF
2373009400080001500470B8500970B8500F70B8500570B8500B70B870A6D3008070B8D474236146
0EEE400B4403440060BA47A9D060BA47A9D061BA47A9D061BA47A9D061BA47A9D062BA47DCEDDCCF
2373009C00080001058070B8D40B8070B8D3018070B8D4068070B8D40C8070B8D402807074236147
0EEE400F44034400A9F7D46040D440D8F7D46040D440D8F7D46090D4D060BC4BA290D4D0DCEDDCCF
2373009400080001B8210800F008204C210802F008204D2408056F0F51052C70AA610C2374236148
0EEE400244034400D9D4F7D46090D4D060BC4BA490D4D0D9D4F7D46150D4800040D9F7D4DCEDDCCF
237300AC00080001400C24080B6F0F510B2C70A8610C23440C230801800C80040048240874236149
0EEE4006440344006140D440D9F7D46140D440D9F7D46240D440D9D0DABC4FA9D0DA624FDCEDDCCF
237300A40008000106F008004A24080CF008004C240802F008004E29402E70AA2040084074236140
0EEE400944034400A990D64FA9D060BA47A9D060BA47A9D060BA47A9D061BA47A9D061BADCEDDCCF
237300AC00080001A4623870B8D3008070B8D4078070B8D40F8070B8D3058070B8D40A8074236141
0EEE400D4403440047A9D062BA47A9D062BA47A9F7D46040D440D8F7D46040D440D8F7D4DCEDDCCF
237300A40008000170B8D4008070B8D4068070B8210800F008204C210802F008204D240874236142
0EEE4000440344006090D4D060BC4BA290D4D0D9D4F7D46090D4D060BC4BA390D4D0D9D4DCEDDCCF
237300BC00080001076F0F51072C70B0610C23400C24080F6F0F510F2C70BE610C23440C74236143
0EEE400444034400F7D46150D4800040D9F7D46140D440D9F7D46240D440D9F7D46240D4DCEDDCCF
237300B400080001230805800C8004004824080AF008004A240800F008004C240806F00874236144
0EEE40074403440040D9D0DABC4FA9D0DA624FA890D64FAFD0D8B24FAF5EDE1F1E4E109FDCEDDCCF
237300BC00080001004E29402E70B020400C40BA62387044274020705C001881BE30005074236145
0EEE400B44034400104BAB4EE38E004EF04E109F104BAD4EE38E018E014EF0D0F0F04110DCEDDCCF
237300B4000800010070BE1009900420003001500170B61009900C800C2001600001100274236146
0EEE400E440344004FF040AA5EDE0F9ED043D844D74000954048A2964048A2964048A2D0DCEDDCCF
237300BC00080001100160BC80187E0C0C1040104810085C0070CC5F0070CC5C0070CC5074236147
0EEE400244034400403047A34330444040A09ED00FD060BC47AF5160D010B048B5D010B0DCEDDCCF
237300C400080001000070C81001100160CA8C0C7E510424705C8000540031700E54003674236148
0EEE40054403440047AF46D5986048AF4F604FBC4DAF5160D010BF47AF411040001F42AFDCEDDCCF
237300CC00080001705C10301006705C8004B024705C800054002C705C1005100890705C74236149
0EEE400944034400D0D8B20F4FAAD0D8104FAAD0D8BA47A99FD84BA996D848A9D8D6D6D0DCEDDCCF
237300C4000800012740206070C620400040C0D7407070BC504070BC504070BC243B3A2474236140
0EEE400C44034400D8B0D0D9D846D89860111011014EAF5EDE4FA3D0D8B24FAF5EDE90D6DCEDDCCF
237300CC000800013B362732401040600B858631A510C200147FE627402070440014183874236141
0EEE40004403440048A151DA5E101FBFE30E9FD696D91747DB4DA6485390DB48A3475311DCEDDCCF
237300D40008000170DC801C8008BFF7055F47388910B6B01670D2800E541770DA000E8974236142
0EEE4003440344009210550056001FBF530E115E101FBFE30E485351D941DB51D951DA41DCEDDCCF
237300DC0008000120050108010CBFF7015F898008BFF7055F000E8010A01600148010A07423
0EEE400744034400DB51DAD8D6D694D848A898D648A890D890D648AB90D8D0D9D548A0D0DCEDDCCF
237300D400080001160014243B3A504070F4103970F4204B123870D82F4B514A0A70EC2174236144
0EEE400A44034400D9D591D64FA094D648A090D8D1D8D890D8D0D8D841000051D951D980DCEDDCCF
237300DC000800014A0A603970EC103970E02F4B7D4C4C214C714E4E1002AB004000448074236145
0EEE400E440344000140D951D541D941D9D0DABD4FA090D648A090D8D0D8BED0D9D846D8DCEDDCCF
237300D4000800010000488008004C004A29402870EC113870EC224B253B22273240104074236146
0EEE400144034400D0606011101101BFBE42AA4FA34FA54FA64FA74FA84FA84FA94FAAD0DCEDDCCF
237300EC00080001720808858631A5D22870EC7FE670E270E670E070E470EE70E870E2D874236147
0EEE400544034400D9B9D010B541104FABD1D9BE4FABD0D9B9D010B041104FABD2D9B14FDCEDDCCF
237300E400080001326C270120100970EE263B1070E2D8326C24013B100670EE203B307074236148
0EEE400844034400ABD1D9B74FABD1D9B84FABD1D9B04FABD1D9B390D64EAA4FA898D841DCEDDCCF
237300EC00080001E22B3B2070E22B3B2C70E22F3B2070E22C3B31240750F270F4104B7074236149
0EEE400C44034400A851D65FD54FD4D010B4D010D494104110941047AFD010104FAE4110DCEDDCCF
237300E400080001F000008008E00826013EE6010D2D011002500070E826000170E6100174236140
0EEE400F44034400941047AFD010B54FBB47A1D010100191D648A29ED6D010B54EAA5FD5DCEDDCCF
237300EC00080001500070E8270128902270FA21070860103970FC4F392E083550F2800C74236141
0EEE4003440344001F48A8D8D6D651D64FD4D010B4D010D494104110941047A6D010104FDCEDDCCF
237300F4000800012F70F4243B3A8000E00826013EE6010D2D011002500070FE2600017074236142
0EEE400644034400A54110941047A6D010B64EAA5EDE0FD8D6D6D3D6BE4EAA4F014FB641DCEDDCCF
237300FC00080001FC1001500070FE28013450F280147E243B3A2D3C3950F2100070061074236143
0EEE400A44034400D640079EDA43D6F1DCDC4DACF1DCBFF1DCBF48B040BE4BAED8DCDC0EDCEDDCCF
237300F4000800013B1009024C100C91474970F28047229047227008902A70FE244C4B6074236144
0EEE400D440344004FAED0DC104EAE41DC1211101FBF130EF1DCB69EDA0FF2DCB6D8DCDCDCEDDCCF
237300FC0008000170F6204C0040F0104C818382FFF7015FA0473D824C7EA0443D244C4B74236145
0EEE4011440344009FDCD2DCB641D0D010BED010DCD010BA1140DC1FBF130ED8DCDC1140DCEDDCCF
2373000400080001214C2C4D3E105E25032CE5034423002883104CFFF7015F244C4B831074236146
0EEE401444034400DC1FBF130E90DB4FAC4EAF4FD61246D5986092D648BE114E0055004EDCEDDCCF
2373000C000800014CFFF7015F814470FC50CC80068F100020001038700686310001002174236147
0EEE401844034400000111901141BD1FBF115EF01E47BA93F047BD90111E11B1F04EF010DCEDDCCF
237300040008000100A48511077004FFF70580002E700A100470046107BEB1F3063005CE74236148
0EEE401B44034400411094F04EBC41101041F00091D648BE90D841100094D648B4114E00DCEDDCCF
2373000C0008000110081004700C1008811000AA1038700681141000AA1038701A86310074236149
0EEE401F4403440054004E000111901141B41FBF115EF01E47B293F047B490111E11B1F0DCEDDCCF
237300040008000101002100A4841107701AFFF70580002E70101004701A6107BEB1F30674236140
0EEE4012440344004EF010411094F04EB441101041F00098D648BB43D6114E0053004E00DCEDDCCF
2373001C000800013005CE1008100470121008811000AA10387012100C8631000100210074236141
0EEE4016440344000111901141BB1FBF115EF01E47B893F047BB90111E11B1F04EF01041DCEDDCCF
2373001400080001A48311077012FFF70580002E7018100470126107BEB1F3063005CE1074236142
0EEE4019440344001094F04EBA41101041F0001150A55DD04110001F90D15ED00F444444DCEDDCCF
2373001C00020001081004701A1008811000AA8D800080041000AA828C04800C7E00000074236143
0EEE401D440044008006800F800E44444444444444444444444444444444444444444444DCEDDCCF
23730010000C0001503E503A502E0000000000000000000000000000000000000000000074236144
0EEE401E44034400DDE4CCCCC45554CDDCCCE4CECEEE4555DDE4EEDECC45554EEDDCCC4CDCEDDCCF
23730010000800015630144540CCC0139514805792320CCC56302366540CCC023691750574236145
0EEE401144034400DDDD455544444444EEECD444EEEEEF44EDCDDCDC4CDD4464CCC4CCDCDCEDDCCF
237300280008000199690CCC0000000028295000282431002297795706690B101440319474236146
0EEE401544034400DCDDCCCCDCCDDCE5464CCC4DCDC7EEC7DDE4EEDECC45554C6D4CDDDDDCEDDCCF
2373002000080001957313549536942DB1014405145E229E56302366540CCC091605996974236147
0EEE4018440344004555DDE4EEDECC45554CCC4CDDDD4555DCCC00460000E40000EDCEC4DCEDDCCF
23730028000800010CCC56302366540CCC04320599690CCC71755CB103012D020947435D74236148
0EEE401C44034400000500000202FF4444444444DCEDDCC444DCDCCD01074222220DCEEDDCEDDCCF
23730020000800010000050C090D66000000000074236140004542590809000000C5562774236149
0EEE401F44034400CCCCDCDC7CDCEDCDCCECCCCCDDE4EEDECC45554CCDCCEDDE4CEDD455DCEDDCCF
237300280008000161445145E55447139121445456302366540CCC0499533698064330CC74236140
0EEE4013440344005DDE4EEDECC45554DCEC4CDDDD45554226222464EECEE4CCECC5DDCCDCEDDCCF
2373003000080001C56302366540CCC074250599690CCC000B01000023132069754D464974236141
0EEE401644034400CCCC516664DCEDDCC46664DCE4DCDCCD4DCDDCC4EECDCEE46664444DDCEDDCCF
23730038000800016954DC0000742361400000742045425909536140439393800000000774236142
0EEE401A44034400CEDDCC4ECDDCDCECC464ECDCCCDC6DCDCEC4DEEDEE4DCDECDCE4ECDCDCEDDCCF
23730030000800014236140359495135400051991235035573806437430958499520519974236143
0EEE401D44034400CCDC6DCDCEC4CDDEE4444DCEDDCC4ECDDCDCECC464EDCCCCDCC4DCCDDCEDDCCF
23730038000800011235035573809574300007423614035949513540004545695540953674236144
0EEE401144034400DC4CDDDCE4DDE4EEDDDDECC4444DCEDDCC4ECDDCDCECC464CDDEE4CCDCEDDCCF
23730040000800019406694130563024776935400007423614035949513540009574306974236145
0EEE401444034400DC4DDCCCCD4DCCDDC4DCDCEC4DCEE4ECCD4FF0000000000000000000DCEDDCCF
23730048000800013503679313095369403557380352203815080000000000000000000074236146
0EEE40184403440000000000004000000000901DEEEDDCDE000500000000000000000000DCEDDCCF
23730040000800010000000100000001000140182827995320000001000100000000000174236147
0EEE401B4403440000000000000700000000000000000000000000000000000000400000DCEDDCCF
2373004800080001000100010009000100000001000000000000000000000001000000017423
0EEE401F440344000015001DEEEEEF440040000000000000000000000000000000000000DCEDDCCF
2373004000080001000E001028243100208000010001000000000001000100010000000174236149
0EEE40124403440000000000000000000000000000000000000000000000001DEEEEEF44DCEDDCCF
23730058000800010000000100000000000000000000200100200001000100142824320074236140
0EEE40164403440000020000000000000000000000000000000000000000020000000000DCEDDCCF
23730050000800012004000100010000000000010001000100000001000000000000000074236141
0EEE4019440344000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
23730058000800010000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236142
0EEE401D44034400FFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0DCEDDCCF
2373005000080001FFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF074236143
0EEE401044034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373006800080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236144
0EEE401444034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373006000080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236145
0EEE401744034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000DCEDDCCF
2373006800080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000074236146
0EEE401B4403440000000000000000000000000000000000000000000000400000000000DCEDDCCF
23730060000800010000000000000000000000000000000000000000000000000000000074236147
0EEE401E4403440000000000000000000000000000000006000000000000000000000000DCEDDCCF
23730068000800010000000000000000000000000000000B00000000000000000000000074236148
0EEE40124403440000000000000000000000000000000000000000000000000000000000DCEDDCCF
23730070000800010000000000000000000000000000000000000000000000000000000074236149
0EEE40154403440000000000000000000000000000000000000000000000000000000000DCEDDCCF
23730078000800010000000000000000000000000000000000000000000000000000000074236140
0EEE4019440344000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
23730070000800010000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236141
0EEE401C44034400FFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFDCEDDCCF
2373007800080001FFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFF0FFFF74236142
0EEE4010440344000FFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
23730080000800010FFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFF74236143
0EEE401344034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FFFFFFDCEDDCCF
2373008800080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FFFFFF74236144
0EEE401744034400F000000000FFFFFFFF00000000FFFFFF0000000000FFFFFFFFFFFFFFDCEDDCCF
2373008000080001F000000000FFFFFFFF00000000FFFFFF0000000000FFFFFFFFFFFFFF74236145
0EEE401A44034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373008800080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236146
0EEE401E44034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373008000080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236147
0EEE401144034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373009800080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236148
0EEE401544034400FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDCEDDCCF
2373009000080001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74236149
0EEE401844014400FFFFFFFF0000000000FFFFFF44444444444444444444444444444444DCEDDCCF
2373009800080001FFFFFFFF0000000000FFFFFF0000000000000000000000000000000074236140
0DDC4444440244440000001D001D001D0019001F001F0015444444444444444444444444DCEDDCCF
29340000000000000101901190159019904590419045805500000000000000000000000074236141
0CDC4444444444444444444444444444FFFFFFFFFF4FFFFFFFFF44444444444444444444DCEDDCCF
25540000000000000000000000000000156962340000105071490000000000000000000074236142
ENDDATA*/                                                                       
                                                                            
